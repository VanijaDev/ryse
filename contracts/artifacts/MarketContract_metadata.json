{
	"compiler": {
		"version": "0.7.0+commit.9e61f92b"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "_recipient",
						"type": "address"
					}
				],
				"name": "BalanceWithdrawn",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "_recipient",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "TokensBought",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "balance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_tokens",
						"type": "uint256"
					}
				],
				"name": "buyExactTokens",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "currentPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "kill",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_token",
						"type": "uint256"
					}
				],
				"name": "priceForExactToken",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_tokens",
						"type": "uint256"
					}
				],
				"name": "sellExactTokens",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract TestToken",
						"name": "_token",
						"type": "address"
					}
				],
				"name": "setToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "solidTokenPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "token",
				"outputs": [
					{
						"internalType": "contract TestToken",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "tokensBought",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_tokens",
						"type": "uint256"
					}
				],
				"name": "valueToBuyExactTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "withdrawBalance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"balance()": {
					"details": "Returns balance of the Smart Contract.",
					"returns": {
						"_0": "Balance of the Smart Contract."
					}
				},
				"buyExactTokens(uint256)": {
					"details": "Buys tokens.",
					"params": {
						"_tokens": "Token amount to be bought."
					}
				},
				"currentPrice()": {
					"details": "Returns price for the next token.",
					"returns": {
						"_0": "price for the next token."
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"priceForExactToken(uint256)": {
					"details": "Returns price for exact token.",
					"params": {
						"_token": "Exact token to get price for."
					},
					"returns": {
						"_0": "Price for exact token."
					}
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"sellExactTokens(uint256)": {
					"details": "Sells tokens.",
					"params": {
						"_tokens": "Token amount to be sold."
					}
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"valueToBuyExactTokens(uint256)": {
					"details": "Calculates msg.value to be received for appropriate amount of tokens to be bought.",
					"params": {
						"_tokens": "Amount of tokens."
					},
					"returns": {
						"_0": "msg.value to be received."
					}
				},
				"withdrawBalance(uint256)": {
					"details": "Withdraws balance portion.",
					"params": {
						"_amount": "Amount to be withdrawn."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "Flow Deploy Market Deploy Token(_market) Market.setToken(_token)",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/contracts/MarketContract.sol": "MarketContract"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/contracts/MarketContract.sol": {
			"keccak256": "0xc2e2f17d383ef959bafbd31a6c2cbfac6311ef91e3212b95af6435c8e95724c8",
			"license": "MIT",
			"urls": [
				"bzz-raw://d898d9abe7a990b4cb630751b2a5031f7f89ca89b8ce357ab0a722117784887a",
				"dweb:/ipfs/QmcgdVb2vPZrLWhbBL32zrPD5oDdVBDELo8D2hx6qvQanh"
			]
		},
		"localhost/contracts/TestToken.sol": {
			"keccak256": "0xca24a17058821a23ba095cf69d26651d24b8c060c36fc76b45f3db21df8b2a29",
			"license": "MIT",
			"urls": [
				"bzz-raw://9d935f014c0c07bbd8039086c2c8d7ad96bc1284f0bc5021f5d91c5d6bcceecb",
				"dweb:/ipfs/QmTUy7JrXDt1erAep3hEBkdqkfcQ1DuRJaEfrodV2AdSaR"
			]
		},
		"localhost/node_modules/@openzeppelin/contracts/GSN/Context.sol": {
			"keccak256": "0x910a2e625b71168563edf9eeef55a50d6d699acfe27ceba3921f291829a8f938",
			"license": "MIT",
			"urls": [
				"bzz-raw://248246ac66e6479dce1ad7d4945ec5540c98ceb09881e93c93f7c48d5772925c",
				"dweb:/ipfs/QmXr8tmUiZgEYid6ixeeBRmTdUnASWjKzhP3KRxMPy8fRt"
			]
		},
		"localhost/node_modules/@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0x74b0525c81e47810f1bd795755962bdb84de3a4f71cfcb063f4c4d4999a3e96b",
			"license": "MIT",
			"urls": [
				"bzz-raw://1cd0b71a794900681c8bcc255599fac53c211fc6a530a58d7dd7246bfde6c4f5",
				"dweb:/ipfs/QmdAB1mFyuN2i25DRf9szWgp1FLCByqJ4F8aYzXWe3mfTR"
			]
		},
		"localhost/node_modules/@openzeppelin/contracts/math/SafeMath.sol": {
			"keccak256": "0xba96bc371ba999f452985a98717cca1e4c4abb598dc038a9a9c3db08129b1ba4",
			"license": "MIT",
			"urls": [
				"bzz-raw://26e50e3f7b6482fb6f598f2e006994a74aa492687daa4b3eee7fd4fb5398ce7f",
				"dweb:/ipfs/QmZudqoPSkA4USLMFsBBmt19dDPZFS8aaAmL5R7pECXu6t"
			]
		},
		"localhost/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76",
			"license": "MIT",
			"urls": [
				"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b",
				"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU"
			]
		}
	},
	"version": 1
}